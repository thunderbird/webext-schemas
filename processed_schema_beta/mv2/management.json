[
    {
        "namespace": "manifest",
        "types": [
            {
                "$extend": "OptionalPermission",
                "choices": [
                    {
                        "enum": [
                            "management"
                        ],
                        "type": "string"
                    }
                ]
            }
        ]
    },
    {
        "description": "The <code>browser.management</code> API provides ways to manage the list of extensions that are installed and running.",
        "events": [
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/onDisabled",
                "description": "Fired when an addon has been disabled.",
                "name": "onDisabled",
                "parameters": [
                    {
                        "$ref": "ExtensionInfo",
                        "name": "info"
                    }
                ],
                "permissions": [
                    "management"
                ],
                "support": {
                    "notes": "Before version 56, only extensions whose <code>type</code> is <code>'theme'</code> are supported.",
                    "version_added": "55"
                },
                "type": "function"
            },
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/onEnabled",
                "description": "Fired when an addon has been enabled.",
                "name": "onEnabled",
                "parameters": [
                    {
                        "$ref": "ExtensionInfo",
                        "name": "info"
                    }
                ],
                "permissions": [
                    "management"
                ],
                "support": {
                    "notes": "Before version 56, only extensions whose <code>type</code> is <code>'theme'</code> are supported.",
                    "version_added": "55"
                },
                "type": "function"
            },
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/onInstalled",
                "description": "Fired when an addon has been installed.",
                "name": "onInstalled",
                "parameters": [
                    {
                        "$ref": "ExtensionInfo",
                        "name": "info"
                    }
                ],
                "permissions": [
                    "management"
                ],
                "support": {
                    "notes": "Before version 56, only extensions whose <code>type</code> is <code>'theme'</code> are supported.",
                    "version_added": "55"
                },
                "type": "function"
            },
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/onUninstalled",
                "description": "Fired when an addon has been uninstalled.",
                "name": "onUninstalled",
                "parameters": [
                    {
                        "$ref": "ExtensionInfo",
                        "name": "info"
                    }
                ],
                "permissions": [
                    "management"
                ],
                "support": {
                    "notes": [
                        "Before version 56, only extensions whose <code>type</code> is <code>'theme'</code> are supported.",
                        "This event is not fired when the extension is in the \"pending uninstall\" state. The event is fired as expected once the extension is completely removed (for example, when the <code>about:addons</code> tab is closed)."
                    ],
                    "version_added": "55"
                },
                "type": "function"
            }
        ],
        "functions": [
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/getAll",
                "async": "callback",
                "description": "Returns a list of information about installed extensions.",
                "name": "getAll",
                "parameters": [
                    {
                        "name": "callback",
                        "optional": true,
                        "parameters": [
                            {
                                "items": {
                                    "$ref": "ExtensionInfo"
                                },
                                "name": "result",
                                "type": "array"
                            }
                        ],
                        "type": "function"
                    }
                ],
                "permissions": [
                    "management"
                ],
                "support": {
                    "notes": "Before version 56, only extensions whose 'type' is 'theme' are returned.",
                    "version_added": "55"
                },
                "type": "function"
            },
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/get",
                "async": "callback",
                "description": "Returns information about the installed extension that has the given ID.",
                "name": "get",
                "parameters": [
                    {
                        "$ref": "manifest.ExtensionID",
                        "description": "The ID from an item of $(ref:management.ExtensionInfo).",
                        "name": "id"
                    },
                    {
                        "name": "callback",
                        "optional": true,
                        "parameters": [
                            {
                                "$ref": "ExtensionInfo",
                                "name": "result"
                            }
                        ],
                        "type": "function"
                    }
                ],
                "permissions": [
                    "management"
                ],
                "support": {
                    "version_added": "56"
                },
                "type": "function"
            },
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/install",
                "async": "callback",
                "description": "Installs and enables a theme extension from the given url.",
                "name": "install",
                "parameters": [
                    {
                        "name": "options",
                        "properties": {
                            "hash": {
                                "description": "A hash of the XPI file, using sha256 or stronger.",
                                "optional": true,
                                "pattern": "^(sha256|sha512):[0-9a-fA-F]{64,128}$",
                                "type": "string"
                            },
                            "url": {
                                "$ref": "manifest.HttpURL",
                                "description": "URL pointing to the XPI file on addons.mozilla.org or similar."
                            }
                        },
                        "type": "object"
                    },
                    {
                        "name": "callback",
                        "optional": true,
                        "parameters": [
                            {
                                "name": "result",
                                "properties": {
                                    "id": {
                                        "$ref": "manifest.ExtensionID"
                                    }
                                },
                                "type": "object"
                            }
                        ],
                        "type": "function"
                    }
                ],
                "permissions": [
                    "management"
                ],
                "requireUserInput": true,
                "support": {
                    "notes": "The installable file pointed to by <code>url</code> must be a <a href='https://developer.mozilla.org/docs/Mozilla/Add-ons/Themes'>theme</a>, and not a normal browser extension.",
                    "version_added": "63"
                },
                "type": "function"
            },
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/getSelf",
                "async": "callback",
                "description": "Returns information about the calling extension. Note: This function can be used without requesting the 'management' permission in the manifest.",
                "name": "getSelf",
                "parameters": [
                    {
                        "name": "callback",
                        "optional": true,
                        "parameters": [
                            {
                                "$ref": "ExtensionInfo",
                                "name": "result"
                            }
                        ],
                        "type": "function"
                    }
                ],
                "support": {
                    "version_added": "51"
                },
                "type": "function"
            },
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/uninstallSelf",
                "async": "callback",
                "description": "Uninstalls the calling extension. Note: This function can be used without requesting the 'management' permission in the manifest.",
                "name": "uninstallSelf",
                "parameters": [
                    {
                        "name": "options",
                        "optional": true,
                        "properties": {
                            "dialogMessage": {
                                "description": "The message to display to a user when being asked to confirm removal of the extension.",
                                "optional": true,
                                "type": "string"
                            },
                            "showConfirmDialog": {
                                "description": "Whether or not a confirm-uninstall dialog should prompt the user. Defaults to false.",
                                "optional": true,
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "name": "callback",
                        "optional": true,
                        "parameters": [],
                        "type": "function"
                    }
                ],
                "support": {
                    "version_added": "51"
                },
                "type": "function"
            },
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/management/setEnabled",
                "async": "callback",
                "description": "Enables or disables the given add-on.",
                "name": "setEnabled",
                "parameters": [
                    {
                        "description": "ID of the add-on to enable/disable.",
                        "name": "id",
                        "type": "string"
                    },
                    {
                        "description": "Whether to enable or disable the add-on.",
                        "name": "enabled",
                        "type": "boolean"
                    },
                    {
                        "name": "callback",
                        "optional": true,
                        "parameters": [],
                        "type": "function"
                    }
                ],
                "permissions": [
                    "management"
                ],
                "support": {
                    "notes": "Only extensions whose 'type' is 'theme' can be enabled and disabled.",
                    "version_added": "55"
                },
                "type": "function"
            }
        ],
        "namespace": "management",
        "types": [
            {
                "description": "Information about an icon belonging to an extension.",
                "id": "IconInfo",
                "properties": {
                    "size": {
                        "description": "A number representing the width and height of the icon. Likely values include (but are not limited to) 128, 48, 24, and 16.",
                        "type": "integer"
                    },
                    "url": {
                        "description": "The URL for this icon image. To display a grayscale version of the icon (to indicate that an extension is disabled, for example), append <code>?grayscale=true</code> to the URL.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            {
                "description": "A reason the item is disabled.",
                "enum": [
                    "unknown",
                    "permissions_increase"
                ],
                "id": "ExtensionDisabledReason",
                "type": "string"
            },
            {
                "description": "The type of this extension, 'extension' or 'theme'.",
                "enum": [
                    "extension",
                    "theme"
                ],
                "id": "ExtensionType",
                "type": "string"
            },
            {
                "description": "How the extension was installed. One of<br><var>development</var>: The extension was loaded unpacked in developer mode,<br><var>normal</var>: The extension was installed normally via an .xpi file,<br><var>sideload</var>: The extension was installed by other software on the machine,<br><var>admin</var>: The extension was installed by policy,<br><var>other</var>: The extension was installed by other means.",
                "enum": [
                    "development",
                    "normal",
                    "sideload",
                    "admin",
                    "other"
                ],
                "id": "ExtensionInstallType",
                "type": "string"
            },
            {
                "description": "Information about an installed extension.",
                "id": "ExtensionInfo",
                "properties": {
                    "description": {
                        "description": "The description of this extension.",
                        "type": "string"
                    },
                    "disabledReason": {
                        "$ref": "ExtensionDisabledReason",
                        "description": "A reason the item is disabled.",
                        "optional": true
                    },
                    "enabled": {
                        "description": "Whether it is currently enabled or disabled.",
                        "type": "boolean"
                    },
                    "homepageUrl": {
                        "description": "The URL of the homepage of this extension.",
                        "optional": true,
                        "type": "string"
                    },
                    "hostPermissions": {
                        "description": "Returns a list of host based permissions.",
                        "items": {
                            "type": "string"
                        },
                        "optional": true,
                        "type": "array"
                    },
                    "icons": {
                        "description": "A list of icon information. Note that this just reflects what was declared in the manifest, and the actual image at that url may be larger or smaller than what was declared, so you might consider using explicit width and height attributes on img tags referencing these images. See the <a href='manifest/icons'>manifest documentation on icons</a> for more details.",
                        "items": {
                            "$ref": "IconInfo"
                        },
                        "optional": true,
                        "type": "array"
                    },
                    "id": {
                        "description": "The extension's unique identifier.",
                        "type": "string"
                    },
                    "installType": {
                        "$ref": "ExtensionInstallType",
                        "description": "How the extension was installed."
                    },
                    "mayDisable": {
                        "description": "Whether this extension can be disabled or uninstalled by the user.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name of this extension.",
                        "type": "string"
                    },
                    "optionsUrl": {
                        "description": "The url for the item's options page, if it has one.",
                        "type": "string"
                    },
                    "permissions": {
                        "description": "Returns a list of API based permissions.",
                        "items": {
                            "type": "string"
                        },
                        "optional": true,
                        "type": "array"
                    },
                    "shortName": {
                        "description": "A short version of the name of this extension.",
                        "optional": true,
                        "type": "string"
                    },
                    "type": {
                        "$ref": "ExtensionType",
                        "description": "The type of this extension, 'extension' or 'theme'."
                    },
                    "updateUrl": {
                        "description": "The update URL of this extension.",
                        "optional": true,
                        "type": "string"
                    },
                    "version": {
                        "description": "The <a href='manifest/version'>version</a> of this extension.",
                        "type": "string"
                    },
                    "versionName": {
                        "description": "The <a href='manifest/version#version_name'>version name</a> of this extension if the manifest specified one.",
                        "optional": true,
                        "type": "string"
                    }
                },
                "type": "object"
            }
        ]
    }
]