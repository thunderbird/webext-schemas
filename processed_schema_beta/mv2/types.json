[
    {
        "description": "Contains types used by other schemas.",
        "namespace": "types",
        "types": [
            {
                "description": "The scope of the Setting. One of<ul><li><var>regular</var>: setting for the regular profile (which is inherited by the incognito profile if not overridden elsewhere),</li><li><var>regular_only</var>: setting for the regular profile only (not inherited by the incognito profile),</li><li><var>incognito_persistent</var>: setting for the incognito profile that survives browser restarts (overrides regular preferences),</li><li><var>incognito_session_only</var>: setting for the incognito profile that can only be set during an incognito session and is deleted when the incognito session ends (overrides regular and incognito_persistent preferences).</li></ul> Only <var>regular</var> is supported by Firefox at this time.",
                "enum": [
                    "regular",
                    "regular_only",
                    "incognito_persistent",
                    "incognito_session_only"
                ],
                "id": "SettingScope",
                "type": "string"
            },
            {
                "description": "One of<ul><li><var>not_controllable</var>: cannot be controlled by any extension</li><li><var>controlled_by_other_extensions</var>: controlled by extensions with higher precedence</li><li><var>controllable_by_this_extension</var>: can be controlled by this extension</li><li><var>controlled_by_this_extension</var>: controlled by this extension</li></ul>",
                "enum": [
                    "not_controllable",
                    "controlled_by_other_extensions",
                    "controllable_by_this_extension",
                    "controlled_by_this_extension"
                ],
                "id": "LevelOfControl",
                "type": "string"
            },
            {
                "events": [
                    {
                        "description": "Fired after the setting changes.",
                        "name": "onChange",
                        "parameters": [
                            {
                                "name": "details",
                                "properties": {
                                    "incognitoSpecific": {
                                        "description": "Whether the value that has changed is specific to the incognito session.<br/>This property will <em>only</em> be present if the user has enabled the extension in incognito mode.",
                                        "optional": true,
                                        "type": "boolean"
                                    },
                                    "levelOfControl": {
                                        "$ref": "types.LevelOfControl",
                                        "description": "The level of control of the setting."
                                    },
                                    "value": {
                                        "description": "The value of the setting after the change.",
                                        "type": "any"
                                    }
                                },
                                "type": "object"
                            }
                        ],
                        "type": "function"
                    }
                ],
                "functions": [
                    {
                        "async": "callback",
                        "description": "Gets the value of a setting.",
                        "name": "get",
                        "parameters": [
                            {
                                "description": "Which setting to consider.",
                                "name": "details",
                                "properties": {
                                    "incognito": {
                                        "description": "Whether to return the value that applies to the incognito session (default false).",
                                        "optional": true,
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "name": "callback",
                                "parameters": [
                                    {
                                        "description": "Details of the currently effective value.",
                                        "name": "details",
                                        "properties": {
                                            "incognitoSpecific": {
                                                "description": "Whether the effective value is specific to the incognito session.<br/>This property will <em>only</em> be present if the <var>incognito</var> property in the <var>details</var> parameter of <code>get()</code> was true.",
                                                "optional": true,
                                                "type": "boolean"
                                            },
                                            "levelOfControl": {
                                                "$ref": "types.LevelOfControl",
                                                "description": "The level of control of the setting."
                                            },
                                            "value": {
                                                "description": "The value of the setting.",
                                                "type": "any"
                                            }
                                        },
                                        "type": "object"
                                    }
                                ],
                                "type": "function"
                            }
                        ],
                        "type": "function"
                    },
                    {
                        "async": "callback",
                        "description": "Sets the value of a setting.",
                        "name": "set",
                        "parameters": [
                            {
                                "description": "Which setting to change.",
                                "name": "details",
                                "properties": {
                                    "scope": {
                                        "$ref": "types.SettingScope",
                                        "description": "Where to set the setting (default: regular).",
                                        "optional": true
                                    },
                                    "value": {
                                        "description": "The value of the setting. <br/>Note that every setting has a specific value type, which is described together with the setting. An extension should <em>not</em> set a value of a different type.",
                                        "type": "any"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "description": "Called at the completion of the set operation.",
                                "name": "callback",
                                "optional": true,
                                "parameters": [],
                                "type": "function"
                            }
                        ],
                        "type": "function"
                    },
                    {
                        "async": "callback",
                        "description": "Clears the setting, restoring any default value.",
                        "name": "clear",
                        "parameters": [
                            {
                                "description": "Which setting to clear.",
                                "name": "details",
                                "properties": {
                                    "scope": {
                                        "$ref": "types.SettingScope",
                                        "description": "Where to clear the setting (default: regular).",
                                        "optional": true
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "description": "Called at the completion of the clear operation.",
                                "name": "callback",
                                "optional": true,
                                "parameters": [],
                                "type": "function"
                            }
                        ],
                        "type": "function"
                    }
                ],
                "id": "Setting",
                "type": "object"
            }
        ]
    }
]