[
    {
        "functions": [
            {
                "api_documentation_url": "https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/contentScripts/register",
                "async": true,
                "description": "Register a content script programmatically",
                "name": "register",
                "parameters": [
                    {
                        "$ref": "RegisteredContentScriptOptions",
                        "name": "contentScriptOptions"
                    }
                ],
                "support": {
                    "version_added": "59"
                },
                "type": "function"
            }
        ],
        "namespace": "contentScripts",
        "types": [
            {
                "description": "Details of a content script registered programmatically",
                "id": "RegisteredContentScriptOptions",
                "properties": {
                    "allFrames": {
                        "description": "If allFrames is <code>true</code>, implies that the JavaScript or CSS should be injected into all frames of current page. By default, it's <code>false</code> and is only injected into the top frame.",
                        "optional": true,
                        "type": "boolean"
                    },
                    "cookieStoreId": {
                        "choices": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "description": "limit the set of matched tabs to those that belong to the given cookie store id",
                        "optional": true
                    },
                    "css": {
                        "description": "The list of CSS files to inject",
                        "items": {
                            "$ref": "extensionTypes.ExtensionFileOrCode"
                        },
                        "optional": true,
                        "type": "array"
                    },
                    "excludeGlobs": {
                        "items": {
                            "type": "string"
                        },
                        "optional": true,
                        "type": "array"
                    },
                    "excludeMatches": {
                        "items": {
                            "$ref": "manifest.MatchPattern"
                        },
                        "minItems": 1,
                        "optional": true,
                        "type": "array"
                    },
                    "includeGlobs": {
                        "items": {
                            "type": "string"
                        },
                        "optional": true,
                        "type": "array"
                    },
                    "js": {
                        "description": "The list of JS files to inject",
                        "items": {
                            "$ref": "extensionTypes.ExtensionFileOrCode"
                        },
                        "optional": true,
                        "type": "array"
                    },
                    "matchAboutBlank": {
                        "description": "If matchAboutBlank is true, then the code is also injected in about:blank and about:srcdoc frames if your extension has access to its parent document. Ignored if matchOriginAsFallback is specified. By default it is <code>false</code>.",
                        "optional": true,
                        "type": "boolean"
                    },
                    "matchOriginAsFallback": {
                        "description": "If matchOriginAsFallback is true, then the code is also injected in about:, data:, blob: when their origin matches the pattern in 'matches', even if the actual document origin is opaque (due to the use of CSP sandbox or iframe sandbox). Match patterns in 'matches' must specify a wildcard path glob. By default it is <code>false</code>.",
                        "optional": true,
                        "type": "boolean"
                    },
                    "matches": {
                        "items": {
                            "$ref": "manifest.MatchPattern"
                        },
                        "minItems": 1,
                        "optional": false,
                        "type": "array"
                    },
                    "runAt": {
                        "$ref": "extensionTypes.RunAt",
                        "description": "The soonest that the JavaScript or CSS will be injected into the tab. Defaults to \"document_idle\".",
                        "optional": true
                    },
                    "world": {
                        "$ref": "extensionTypes.ExecutionWorld",
                        "description": "The JavaScript world for a script to execute within. Defaults to \"ISOLATED\".",
                        "optional": true
                    }
                },
                "type": "object"
            },
            {
                "description": "An object that represents a content script registered programmatically",
                "functions": [
                    {
                        "async": true,
                        "description": "Unregister a content script registered programmatically",
                        "name": "unregister",
                        "parameters": [],
                        "type": "function"
                    }
                ],
                "id": "RegisteredContentScript",
                "type": "object"
            }
        ]
    }
]